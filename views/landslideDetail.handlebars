{{!-- src/views/landslideEdit.handlebars --}}
{{#if landslide}}
    <div class="container">
        <h2 class="text-center mb-4">Landslide Details {{mapcolor.value}}</h2>

        {{#if canEdit}}
            <!-- Editable Landslide Form (Editable for Admin or Creator) -->
            <div class="card mt-4">
                <div class="card-body">
                    <form action="/landslide/edit/{{landslide.uuid}}" method="POST">
                        <!-- Map Container -->
                        <div class="mb-3" id="map" style="height: 400px; width: 100%;"></div>

                        <div class="mb-3">
                            <label for="volume" class="form-label">Volume (cubic meters)</label>
                            <input type="number" class="form-control" id="volume" name="volume" value="{{landslide.volume}}" required>
                        </div>
                        <div class="mb-3">
                            <label for="depth" class="form-label">Depth (meters)</label>
                            <input type="number" class="form-control" id="depth" name="depth" value="{{landslide.depth}}" required>
                        </div>
                        <div class="mb-3">
                            <label for="width" class="form-label">Width (meters)</label>
                            <input type="number" class="form-control" id="width" name="width" value="{{landslide.width}}" required>
                        </div>
                        <div class="mb-3">
                            <label for="description" class="form-label">Description</label>
                            <textarea class="form-control" id="description" name="description" rows="3" required>{{landslide.description}}</textarea>
                        </div>

                        <!-- Hidden field for updated geometry -->
                        <input type="hidden" id="geometry" name="geometry" value="{{{landslide.geometry}}}">

                        <!-- Save button -->
                        <div class="d-flex justify-content-end mb-3">
                            <button type="submit" class="btn btn-primary mt-4"><i class="fas fa-save"></i> Save</button>
                        </div>
                    </form>
                </div>
            </div>
        {{else}}
            <!-- View-only Landslide Details for other users -->
            <div class="card mt-4">
                <div class="card-body">
                    <!-- Map Container -->
                    <div class="mb-3" id="map" style="height: 400px; width: 100%;"></div>

                    <div class="mb-3">
                        <label for="volume" class="form-label">Volume (cubic meters)</label>
                        <input type="number" class="form-control" id="volume" value="{{landslide.volume}}" disabled>
                    </div>
                    <div class="mb-3">
                        <label for="depth" class="form-label">Depth (meters)</label>
                        <input type="number" class="form-control" id="depth" value="{{landslide.depth}}" disabled>
                    </div>
                    <div class="mb-3">
                        <label for="width" class="form-label">Width (meters)</label>
                        <input type="number" class="form-control" id="width" value="{{landslide.width}}" disabled>
                    </div>
                    <div class="mb-3">
                        <label for="description" class="form-label">Description</label>
                        <textarea class="form-control" id="description" rows="3" disabled>{{landslide.description}}</textarea>
                    </div>
                </div>
            </div>

            <!-- Show Edit button only if user is the creator or admin -->
            {{#if canEdit}}
                <div class="text-center mt-3">
                    <a href="/landslide/edit/{{landslide.uuid}}" class="btn btn-warning"><i class="fas fa-edit"></i> Edit Landslide</a>
                </div>
            {{/if}}
        {{/if}}

        <script>
            document.addEventListener("DOMContentLoaded", function() {
                // Get the color value from the Handlebars template (this should be a valid color like #FF5733 or rgba(255, 0, 0, 0.5))
                const mapColor = "{{mapcolor.value}}"  || "#FF5733";; // Color defined in the template

                // Parse the serialized geometry string into a GeoJSON object
                const landslideGeometry = {{{landslide.geometry}}};  // Ensure it's valid JSON

                // Initialize the map
                const map = L.map('map').setView([46.5962, 9.5986], 13);  // Default view for the map (Savognin, Switzerland)

                // Add OpenStreetMap tile layer
                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    maxZoom: 19,
                    attribution: 'Â© OpenStreetMap contributors'
                }).addTo(map);

                // Function to style the GeoJSON layer with the map color
                function geoJsonStyle() {
                    return {
                        color: mapColor,   // Use the color from the template
                        weight: 3,
                        opacity: 1,
                        fillOpacity: 0.4
                    };
                }

                // Initialize the GeoJSON layer if geometry exists
                let geoJsonLayer;
                if (landslideGeometry && landslideGeometry.type === 'Feature' && landslideGeometry.geometry) {
                    geoJsonLayer = L.geoJSON(landslideGeometry, { style: geoJsonStyle }).addTo(map);
                    map.fitBounds(geoJsonLayer.getBounds());
                }

                {{#if canEdit}}
                    // Only initialize the Leaflet Draw control if the user can edit
                    const drawControl = new L.Control.Draw({
                        edit: {
                            featureGroup: new L.FeatureGroup(),  // Feature group to store editable features
                        },
                        draw: {
                            polygon: true,  // Allow drawing polygons
                            circle: false,
                            rectangle: false,
                            marker: false
                        }
                    }).addTo(map);

                    // When a shape is drawn or edited, update the hidden geometry field
                    map.on('draw:created', function(e) {
                        const layer = e.layer;
                        const geoJson = layer.toGeoJSON();

                        // Update the hidden input field with the new geometry
                        document.getElementById('geometry').value = JSON.stringify(geoJson);
                    });

                    map.on('draw:edited', function(event) {
                        // Update the hidden input field when editing occurs
                        const layers = event.layers;
                        layers.eachLayer(function(layer) {
                            document.getElementById('geometry').value = JSON.stringify(layer.toGeoJSON());
                        });
                    });
                {{/if}}
            });
        </script>
    </div>
{{else}}
    <div class="alert alert-danger">
        Landslide record not found.
    </div>
{{/if}}
